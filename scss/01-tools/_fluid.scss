@import "../variables";

/**
 * Fluid
 *
 * A mixin that takes a given css property and scales it fluidly.
 * Based on fluid typography. Source:
 * https://css-tricks.com/snippets/css/fluid-typography/
 *
 * Supports only pixel values.
 *
 *============================================================================*/





/* Variables
 *============================================================================*/
/**
 * 1. Lower limit.  Given property won't scale down below this screen size.
 * 2. Upper limit. Given property won't scale up above this screen size.
 */

$ll: $screen-xs; /* [1] */
$ul: $screen-s; /* [2] */





/* Helper function
 *============================================================================*/

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}





/* Main mixin
 *============================================================================*/

@mixin fluid($max, $min, $prop) {
  & {
    #{$prop}: $min;

    @media (min-width: $ll) {
      #{$prop}: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$ll}) / #{strip-unit($ul - $ll)}));
    }

    @media (min-width: $ul) {
      #{$prop}: $max;
    }

  }

}





/* Example
 *============================================================================*/
/**
 * Paragraph font size will fluently scale from 18px on large screens to 14px
 * on smaller screens:
 *
 * p {
 *   @include fluid(18px, 14px, font-size);
 * }
 */