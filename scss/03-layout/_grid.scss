@import "../variables";

/**
 * Grid
 *
 * A 12-column grid based on flex.
 *
 *============================================================================*/





/* Variables
 *============================================================================*/
/**
 * 1. Maximum grid width. Bellow this size it will be full screen width.
 * 2. Space between cells.
 */

$grid-width : 1200px; /* [1] */
$grid-gutter: 20px; /* [2] */





/* Grid
 *============================================================================*/
/**
 * 1. Cells that don't fit into a row will wrap into a new row.
 * 2. Cells in a row are centered. To overwrite this, use one of the
 *    'justify-content' helpers from '05-utilities/utilities' e.g.
 *    <div class="grid jc-start">…<div>
 */

.grid {
  display: flex;
  flex-wrap: wrap; /* [1] */
  justify-content: center; /* [2] */
  max-width: $grid-width;
  width: 100%;
  margin: 0 auto;

  // Gutter
  & > [class*="col"] {
    padding: $grid-gutter / 2;
  }

}





/* Grid modifiers
 *============================================================================*/

// 'grid-full' makes the grid full container width
.grid.grid-full {
  max-width: 100%;
}

// 'grid-no-gutter' removes space between cells
.grid.grid-no-gutter > [class*="col"] {
  padding: 0;
}





/* Columns
 *============================================================================*/

// Normal layout
.col-0 { display: none; }
@for $i from 1 through 12 {
  .col-#{$i} {
    display: block;
    width     : #{$i / 12 * 100%};
    flex-basis: #{$i / 12 * 100%};
  }
}

// Large screen layout
@media (max-width: $screen-l) {
  .col-l-0 { display: none; }
  @for $i from 1 through 12 {
    .col-l-#{$i} {
      display: block;
      width     : #{$i / 12 * 100%};
      flex-basis: #{$i / 12 * 100%};
    }
  }
}

// Medium screen layout
@media (max-width: $screen-m) {
  .col-m-0 { display: none; }
  @for $i from 1 through 12 {
    .col-m-#{$i} {
      display: block;
      width     : #{$i / 12 * 100%};
      flex-basis: #{$i / 12 * 100%};
    }
  }
}

// Small screen layout
@media (max-width: $screen-s) {
  .col-s-0 { display: none; }
  @for $i from 1 through 12 {
    .col-s-#{$i} {
      display: block;
      width     : #{$i / 12 * 100%};
      flex-basis: #{$i / 12 * 100%};
    }
  }
}

// Extra small screen layout
@media (max-width: $screen-xs) {
  .col-xs-0 { display: none; }
  @for $i from 1 through 12 {
    .col-xs-#{$i} {
      display: block;
      width     : #{$i / 12 * 100%};
      flex-basis: #{$i / 12 * 100%};
    }
  }
}





/* Example
 *============================================================================*/
/**
 * A grid with with three cells where each cell takes up 4 column spaces. The
 * cells expand to take up 12 column spaces on smaller screens.
 *
 * <div class="grid">
 *   <div class="col-4 col-s-12">…</div>
 *   <div class="col-4 col-s-12">…</div>
 *   <div class="col-4 col-s-12">…</div>
 * <div>
 */
